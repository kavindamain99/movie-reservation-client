{"id":"node_modules/credit-card-type/dist/lib/matches.js","dependencies":[{"name":"D:\\github\\movie-reservation-client\\package.json","includedInParent":true,"mtime":1652025888698},{"name":"D:\\github\\movie-reservation-client\\node_modules\\credit-card-type\\package.json","includedInParent":true,"mtime":1652018442731}],"generated":{"js":"\"use strict\";\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n    var maxLengthToCheck = String(min).length;\n    var substr = cardNumber.substr(0, maxLengthToCheck);\n    var integerRepresentationOfCardNumber = parseInt(substr, 10);\n    min = parseInt(String(min).substr(0, substr.length), 10);\n    max = parseInt(String(max).substr(0, substr.length), 10);\n    return (integerRepresentationOfCardNumber >= min &&\n        integerRepresentationOfCardNumber <= max);\n}\nfunction matchesPattern(cardNumber, pattern) {\n    pattern = String(pattern);\n    return (pattern.substring(0, cardNumber.length) ===\n        cardNumber.substring(0, pattern.length));\n}\nfunction matches(cardNumber, pattern) {\n    if (Array.isArray(pattern)) {\n        return matchesRange(cardNumber, pattern[0], pattern[1]);\n    }\n    return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/credit-card-type/dist/lib/matches.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/credit-card-type/dist/lib/matches.js":"\"use strict\";\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n    var maxLengthToCheck = String(min).length;\n    var substr = cardNumber.substr(0, maxLengthToCheck);\n    var integerRepresentationOfCardNumber = parseInt(substr, 10);\n    min = parseInt(String(min).substr(0, substr.length), 10);\n    max = parseInt(String(max).substr(0, substr.length), 10);\n    return (integerRepresentationOfCardNumber >= min &&\n        integerRepresentationOfCardNumber <= max);\n}\nfunction matchesPattern(cardNumber, pattern) {\n    pattern = String(pattern);\n    return (pattern.substring(0, cardNumber.length) ===\n        cardNumber.substring(0, pattern.length));\n}\nfunction matches(cardNumber, pattern) {\n    if (Array.isArray(pattern)) {\n        return matchesRange(cardNumber, pattern[0], pattern[1]);\n    }\n    return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;\n"},"lineCount":28}},"error":null,"hash":"8f6ce790517c7520dc97db0d82337b39","cacheData":{"env":{}}}