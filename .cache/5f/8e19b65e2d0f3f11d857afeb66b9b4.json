{"id":"node_modules/card-validator/dist/lib/parse-date.js","dependencies":[{"name":"D:\\github\\movie-reservation-client\\package.json","includedInParent":true,"mtime":1652952142564},{"name":"D:\\github\\movie-reservation-client\\node_modules\\card-validator\\package.json","includedInParent":true,"mtime":1652018442731},{"name":"../expiration-year","loc":{"line":4,"column":32,"index":137},"parent":"D:\\github\\movie-reservation-client\\node_modules\\card-validator\\dist\\lib\\parse-date.js","resolved":"D:\\github\\movie-reservation-client\\node_modules\\card-validator\\dist\\expiration-year.js"},{"name":"./is-array","loc":{"line":5,"column":25,"index":185},"parent":"D:\\github\\movie-reservation-client\\node_modules\\card-validator\\dist\\lib\\parse-date.js","resolved":"D:\\github\\movie-reservation-client\\node_modules\\card-validator\\dist\\lib\\is-array.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDate = void 0;\nvar expiration_year_1 = require(\"../expiration-year\");\nvar is_array_1 = require(\"./is-array\");\nfunction getNumberOfMonthDigitsInDateString(dateString) {\n    var firstCharacter = Number(dateString[0]);\n    var assumedYear;\n    /*\n      if the first character in the string starts with `0`,\n      we know that the month will be 2 digits.\n  \n      '0122' => {month: '01', year: '22'}\n    */\n    if (firstCharacter === 0) {\n        return 2;\n    }\n    /*\n      if the first character in the string starts with\n      number greater than 1, it must be a 1 digit month\n  \n      '322' => {month: '3', year: '22'}\n    */\n    if (firstCharacter > 1) {\n        return 1;\n    }\n    /*\n      if the first 2 characters make up a number between\n      13-19, we know that the month portion must be 1\n  \n      '139' => {month: '1', year: '39'}\n    */\n    if (firstCharacter === 1 && Number(dateString[1]) > 2) {\n        return 1;\n    }\n    /*\n      if the first 2 characters make up a number between\n      10-12, we check if the year portion would be considered\n      valid if we assumed that the month was 1. If it is\n      not potentially valid, we assume the month must have\n      2 digits.\n  \n      '109' => {month: '10', year: '9'}\n      '120' => {month: '1', year: '20'} // when checked in the year 2019\n      '120' => {month: '12', year: '0'} // when checked in the year 2021\n    */\n    if (firstCharacter === 1) {\n        assumedYear = dateString.substr(1);\n        return expiration_year_1.expirationYear(assumedYear).isPotentiallyValid ? 1 : 2;\n    }\n    /*\n      If the length of the value is exactly 5 characters,\n      we assume a full year was passed in, meaning the remaining\n      single leading digit must be the month value.\n  \n      '12202' => {month: '1', year: '2202'}\n    */\n    if (dateString.length === 5) {\n        return 1;\n    }\n    /*\n      If the length of the value is more than five characters,\n      we assume a full year was passed in addition to the month\n      and therefore the month portion must be 2 digits.\n  \n      '112020' => {month: '11', year: '2020'}\n    */\n    if (dateString.length > 5) {\n        return 2;\n    }\n    /*\n      By default, the month value is the first value\n    */\n    return 1;\n}\nfunction parseDate(datestring) {\n    var date;\n    if (/^\\d{4}-\\d{1,2}$/.test(datestring)) {\n        date = datestring.split(\"-\").reverse();\n    }\n    else if (/\\//.test(datestring)) {\n        date = datestring.split(/\\s*\\/\\s*/g);\n    }\n    else if (/\\s/.test(datestring)) {\n        date = datestring.split(/ +/g);\n    }\n    if (is_array_1.isArray(date)) {\n        return {\n            month: date[0] || \"\",\n            year: date.slice(1).join(),\n        };\n    }\n    var numberOfDigitsInMonth = getNumberOfMonthDigitsInDateString(datestring);\n    var month = datestring.substr(0, numberOfDigitsInMonth);\n    return {\n        month: month,\n        year: datestring.substr(month.length),\n    };\n}\nexports.parseDate = parseDate;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/card-validator/dist/lib/parse-date.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}}],"sources":{"node_modules/card-validator/dist/lib/parse-date.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDate = void 0;\nvar expiration_year_1 = require(\"../expiration-year\");\nvar is_array_1 = require(\"./is-array\");\nfunction getNumberOfMonthDigitsInDateString(dateString) {\n    var firstCharacter = Number(dateString[0]);\n    var assumedYear;\n    /*\n      if the first character in the string starts with `0`,\n      we know that the month will be 2 digits.\n  \n      '0122' => {month: '01', year: '22'}\n    */\n    if (firstCharacter === 0) {\n        return 2;\n    }\n    /*\n      if the first character in the string starts with\n      number greater than 1, it must be a 1 digit month\n  \n      '322' => {month: '3', year: '22'}\n    */\n    if (firstCharacter > 1) {\n        return 1;\n    }\n    /*\n      if the first 2 characters make up a number between\n      13-19, we know that the month portion must be 1\n  \n      '139' => {month: '1', year: '39'}\n    */\n    if (firstCharacter === 1 && Number(dateString[1]) > 2) {\n        return 1;\n    }\n    /*\n      if the first 2 characters make up a number between\n      10-12, we check if the year portion would be considered\n      valid if we assumed that the month was 1. If it is\n      not potentially valid, we assume the month must have\n      2 digits.\n  \n      '109' => {month: '10', year: '9'}\n      '120' => {month: '1', year: '20'} // when checked in the year 2019\n      '120' => {month: '12', year: '0'} // when checked in the year 2021\n    */\n    if (firstCharacter === 1) {\n        assumedYear = dateString.substr(1);\n        return expiration_year_1.expirationYear(assumedYear).isPotentiallyValid ? 1 : 2;\n    }\n    /*\n      If the length of the value is exactly 5 characters,\n      we assume a full year was passed in, meaning the remaining\n      single leading digit must be the month value.\n  \n      '12202' => {month: '1', year: '2202'}\n    */\n    if (dateString.length === 5) {\n        return 1;\n    }\n    /*\n      If the length of the value is more than five characters,\n      we assume a full year was passed in addition to the month\n      and therefore the month portion must be 2 digits.\n  \n      '112020' => {month: '11', year: '2020'}\n    */\n    if (dateString.length > 5) {\n        return 2;\n    }\n    /*\n      By default, the month value is the first value\n    */\n    return 1;\n}\nfunction parseDate(datestring) {\n    var date;\n    if (/^\\d{4}-\\d{1,2}$/.test(datestring)) {\n        date = datestring.split(\"-\").reverse();\n    }\n    else if (/\\//.test(datestring)) {\n        date = datestring.split(/\\s*\\/\\s*/g);\n    }\n    else if (/\\s/.test(datestring)) {\n        date = datestring.split(/ +/g);\n    }\n    if (is_array_1.isArray(date)) {\n        return {\n            month: date[0] || \"\",\n            year: date.slice(1).join(),\n        };\n    }\n    var numberOfDigitsInMonth = getNumberOfMonthDigitsInDateString(datestring);\n    var month = datestring.substr(0, numberOfDigitsInMonth);\n    return {\n        month: month,\n        year: datestring.substr(month.length),\n    };\n}\nexports.parseDate = parseDate;\n"},"lineCount":101}},"error":null,"hash":"7b5907ac483408a6e655264e305abf3d","cacheData":{"env":{}}}